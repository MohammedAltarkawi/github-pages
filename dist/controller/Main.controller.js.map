{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","constructor","prototype","apply","this","arguments","_sLightTheme","_sDarkTheme","sayHello","_sayHello","MessageBox","show","toggleTheme","_toggleTheme","oEvent","oSwitch","getSource","sState","getState","Theming","setTheme","handlePopoverPress","async","_handlePopoverPress","oButton","oView","getView","dialogPromise","Fragment","load","id","getId","name","controller","addDependent","openBy","_getInfoPopover"],"sources":["Main.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\r\nimport BaseController from \"./BaseController\";\r\nimport Theming from \"sap/ui/core/Theming\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport Switch from \"sap/m/Switch\";\r\nimport Button from \"sap/m/Button\";\r\nimport Fragment from \"sap/ui/core/Fragment\";\r\nimport Popover from \"sap/m/Popover\";\r\n\r\n/**\r\n * @namespace mst.githubpage.controller\r\n */\r\nexport default class Main extends BaseController {\r\n\r\n\tprivate _sLightTheme = \"sap_horizon\";\r\n\tprivate _sDarkTheme = \"sap_horizon_dark\";\r\n\tprivate dialogPromise: Popover;\r\n\r\n\tpublic sayHello(): void {\r\n\t\tMessageBox.show(\"Hello World!\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @returns {void}\r\n\t */\r\n\tpublic toggleTheme(oEvent: Event): void {\r\n\t\tconst oSwitch = oEvent.getSource() as Switch;\r\n\t\tconst sState = oSwitch.getState();\r\n\t\tif (sState) {\r\n\t\t\tTheming.setTheme(this._sDarkTheme);\r\n\t\t} else {\r\n\t\t\tTheming.setTheme(this._sLightTheme);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/* onOpenDialog(oEvent: Event): void {\r\n\t\tconst oButton = oEvent.getSource() as Button\r\n\t\t// create dialog lazily\r\n\t\t\tif (!this.dialogPromise) {\r\n\t\t\t\tthis.dialogPromise = <Promise<Popover>> this.loadFragment({\r\n\t\t\t\t\tname: 'mst.githubpage.fragments.InfoPopover'\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\tthis.dialogPromise.then(function(oDialog) {\r\n\t\t\t\tdebugger\r\n\t\t\t\toDialog.openBy(oButton)\r\n\t\t\t});\r\n\t\t}   \r\n */\r\n\tpublic async handlePopoverPress(oEvent: Event){\r\n\t\tconst oButton = oEvent.getSource() as Button,\r\n\t\toView = this.getView();\r\n\t\tif (!this.dialogPromise) {\r\n\t\tthis.dialogPromise = (await Fragment.load({\r\n            id: oView.getId(),\r\n            name: 'mst.githubpage.fragments.InfoPopover',\r\n            controller: this\r\n        })) as Popover;\r\n\t}\r\n\r\n\t\toView.addDependent(this.dialogPromise)\r\n\t\tthis.dialogPromise.openBy(oButton)\r\n\t}\r\n\r\n\tprivate _getInfoPopover(){\r\n\t\t\r\n\t}\r\n}\r\n"],"mappings":"sOACOA,EAAcC,EAAAC,GAQrB,MAGqBC,EAAaH,EAAcI,OAAA,kCAAAC,YAAA,SAAAA,IAAAL,EAAAM,UAAAD,YAAAE,MAAAC,KAAAC,WAAAD,KAEvCE,aAAe,cAAaF,KAC5BG,YAAc,kBAAkB,EAGjCC,SAAQ,SAAAC,IACdC,EAAWC,KAAK,eACjB,EAMOC,YAAW,SAAAC,EAACC,GAClB,MAAMC,EAAUD,EAAOE,YACvB,MAAMC,EAASF,EAAQG,WACvB,GAAID,EAAQ,CACXE,EAAQC,SAAShB,KAAKG,YACvB,KAAO,CACNY,EAAQC,SAAShB,KAAKE,aACvB,CACD,EAiBae,mBAAkBC,eAAAC,EAACT,GAC/B,MAAMU,EAAUV,EAAOE,YACvBS,EAAQrB,KAAKsB,UACb,IAAKtB,KAAKuB,cAAe,CACzBvB,KAAKuB,oBAAuBC,EAASC,KAAK,CAChCC,GAAIL,EAAMM,QACVC,KAAM,uCACNC,WAAY7B,MAEvB,CAECqB,EAAMS,aAAa9B,KAAKuB,eACxBvB,KAAKuB,cAAcQ,OAAOX,EAC3B,EAEQY,gBAAe,SAAAA,IAEvB,IAAC,OAxDmBrC,CAAI","ignoreList":[]}